{"version":3,"file":"static/js/957.359c3fd9.chunk.js","mappings":"+SAEMA,EAAM,gCACNC,EAAM,mCAECC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACeC,EADf,oBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,EAAKC,SAJa,2CAAH,qDAOjB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACUC,EADV,kBACuBM,EADvB,+CADlB,uBACGH,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,yFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNS,EADM,oBACQR,EADR,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,yFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLS,EADK,4BACiBR,EADjB,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKO,MAJP,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,yFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLS,EADK,4BACiBR,EADjB,2BADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKS,QAJP,kE,uJCNP,EA3BkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXC,EAAgED,EAAhEC,YAAaC,EAAmDF,EAAnDE,eAAgBC,EAAmCH,EAAnCG,aAAcC,EAAqBJ,EAArBI,SAAUC,EAAWL,EAAXK,OAG7D,OACE,4BACE,gBACEC,IACEL,EAAW,yCAC2BA,GAPzB,sCAUfM,IAAI,eACJC,MAAO,OAET,4BACE,wBAAKN,KACL,wCAAgBO,KAAKC,MAAqB,GAAfP,GAA3B,QACA,sCACA,uBAAIC,KACJ,qCACA,uBAAIC,EAAOM,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,WAI9C,ECyCD,EAvDqB,WAAO,IAAD,YACjBnB,GAAOoB,EAAAA,EAAAA,MAAPpB,GACR,GAA0BqB,EAAAA,EAAAA,UAAS,MAAnC,eAAOhB,EAAP,KAAciB,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAgB7C,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qFACjBT,GAAW,GADM,cAGfF,EAHe,UAGAvB,EAAAA,EAAAA,IAAWC,GAHX,kFAKfkC,QAAQC,MAAR,MALe,yBAOfX,GAAW,GAPI,4EAAH,qDAUhBS,GACD,GAAE,CAACjC,KAGF,gCACE,mBAAQoC,QAAS,kBAAMX,EAASI,EAAf,EAAjB,4BACCN,IAAW,sCACXlB,IACC,4BACE,SAAC,EAAD,CAAWA,MAAOA,KAClB,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMgC,GAAG,OAAOP,MAAO,CAAEC,KAAI,oBAAEJ,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAAvD,qBAIF,yBACE,SAAC,KAAD,CACEM,GAAG,UACHP,MAAO,CAAEC,KAAI,oBAAEJ,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAFzC,6BASN,SAAC,EAAAO,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C","sources":["API.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '2e3720a8bccf444312af356dec280511';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `${URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return data.results;\n};\n\nexport async function getSearchQuery(query) {\n  const { data } = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data.results;\n}\n\nexport async function getDetails(id) {\n  const { data } = await axios.get(\n    `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await axios.get(\n    `${URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data.cast;\n}\n\nexport async function getReview(id) {\n  const { data } = await axios.get(\n    `${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data.result;\n}\n","const MovieCard = ({ movie }) => {\n  const { poster_path, original_title, vote_average, overview, genres } = movie;\n  const defaultImage = 'https://via.placeholder.com/300x450';\n\n  return (\n    <div>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : defaultImage\n        }\n        alt=\"movie poster\"\n        width={300}\n      />\n      <div>\n        <h3>{original_title}</h3>\n        <p>User score: {Math.round(vote_average * 10)}%</p>\n        <h4>OverView</h4>\n        <p>{overview}</p>\n        <h4>Generes</h4>\n        <p>{genres.map(item => item.name).join('')}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import { useEffect, useState, Suspense } from 'react';\nimport {\n  useLocation,\n  useParams,\n  Link,\n  Outlet,\n  useNavigate,\n} from 'react-router-dom';\nimport { getDetails } from 'API';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const renderCard = async () => {\n      setLoading(true);\n      try {\n        setMovie(await getDetails(id));\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    renderCard();\n  }, [id]);\n\n  return (\n    <section>\n      <button onClick={() => navigate(backLinkHref)}>Back to movies</button>\n      {loading && <p>Loading...</p>}\n      {movie && (\n        <div>\n          <MovieCard movie={movie} />\n          <div>\n            <ul>\n              <li>\n                <Link to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"reviews\"\n                  state={{ from: location.state?.from ?? '/' }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["URL","KEY","getTrending","axios","data","results","getSearchQuery","query","getDetails","id","getCast","cast","getReview","result","movie","poster_path","original_title","vote_average","overview","genres","src","alt","width","Math","round","map","item","name","join","useParams","useState","setMovie","loading","setLoading","navigate","useNavigate","location","useLocation","backLinkHref","state","from","useEffect","renderCard","console","error","onClick","to","Suspense","fallback"],"sourceRoot":""}