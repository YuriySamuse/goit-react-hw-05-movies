{"version":3,"file":"static/js/681.711acebe.chunk.js","mappings":"+SAEMA,EAAM,gCACNC,EAAM,mCAECC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACeC,EADf,oBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,EAAKC,SAJa,2CAAH,qDAOjB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACUC,EADV,kBACuBM,EADvB,+CADlB,uBACGH,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,yFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNS,EADM,oBACQR,EADR,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,yFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLS,EADK,4BACiBR,EADjB,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKO,MAJP,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,yFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLS,EADK,4BACiBR,EADjB,2BADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKS,QAJP,kE,yGCYP,UAzCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQT,GAAOU,EAAAA,EAAAA,MAAPV,GAoBR,OAlBAW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,qFACpBH,GAAW,GADS,cAGlBF,EAHkB,UAGDJ,EAAAA,EAAAA,IAAUH,GAHT,kFAKlBa,QAAQC,MAAR,MALkB,yBAOlBL,GAAW,GAPO,4EAAH,qDAUnBG,GACD,GAAE,CAACZ,KAOF,gCACGQ,IAAW,uCACVF,IAAW,sDACZA,IACC,wBACGA,EAAQS,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGjB,EADE,QAUtB,C","sources":["API.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '2e3720a8bccf444312af356dec280511';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `${URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return data.results;\n};\n\nexport async function getSearchQuery(query) {\n  const { data } = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data.results;\n}\n\nexport async function getDetails(id) {\n  const { data } = await axios.get(\n    `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await axios.get(\n    `${URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data.cast;\n}\n\nexport async function getReview(id) {\n  const { data } = await axios.get(\n    `${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data.result;\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReview } from 'API';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const renderReviews = async () => {\n      setLoading(true);\n      try {\n        setReviews(await getReview(id));\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    renderReviews();\n  }, [id]);\n\n  if (reviews === 0) {\n    <p>No reviews on this Movie</p>;\n  }\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {!reviews && <h2>No reviews on this Movie </h2>}\n      {reviews && (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["URL","KEY","getTrending","axios","data","results","getSearchQuery","query","getDetails","id","getCast","cast","getReview","result","useState","reviews","setReviews","loading","setLoading","useParams","useEffect","renderReviews","console","error","map","author","content"],"sourceRoot":""}